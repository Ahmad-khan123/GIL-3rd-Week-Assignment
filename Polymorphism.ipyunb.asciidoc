+*In[12]:*+
[source, ipython3]
----
# Polymorphism 
print(len("Hello"))        
print(len([1, 2, 3, 4, 5])) 
print(len((1, 2, 3)))       

----


+*Out[12]:*+
----
5
5
3
----


+*In[13]:*+
[source, ipython3]
----
class Cat:
    def speak(self):
        return "Meow!"

class Dog:
    def speak(self):
        return "Woof!"

def animal_sound(animal):
    return animal.speak()

cat_obj = Cat()
dog_obj = Dog()

print(animal_sound(cat_obj))  
print(animal_sound(dog_obj))  

----


+*Out[13]:*+
----
Meow!
Woof!
----


+*In[11]:*+
[source, ipython3]
----
class Car:
    def __init__(self, brand, model):
        self.brand = brand
        self.model = model

    def move(self):
        print("Drive!")

class Boat:
    def __init__(self, brand, model):
        self.brand = brand
        self.model = model

    def move(self):
        print("Sail!")

class Plane:
    def __init__(self, brand, model):
        self.brand = brand
        self.model = model

    def move(self):
        print("Fly!")

car1 = Car("Ford", "Mustang")       #Create a Car class
boat1 = Boat("Ibiza", "Touring 20") #Create a Boat class
plane1 = Plane("Boeing", "747")     #Create a Plane class

for x in (car1, boat1, plane1):
    x.move()
----


+*Out[11]:*+
----
Drive!
Sail!
Fly!
----


+*In[14]:*+
[source, ipython3]
----
#1. Function Overloading (Compile-time Polymorphism)
def add(a, b=0, c=0):
    return a + b + c

result1 = add(1)
result2 = add(1, 2)
result3 = add(1, 2, 3)

print(result1) 
print(result2)  
print(result3)  

----


+*Out[14]:*+
----
1
3
6
----


+*In[16]:*+
[source, ipython3]
----
#Polymorphism with Inheritance:
class Shape:
    def area(self):
        pass

class Circle(Shape):
    def __init__(self, radius):
        self.radius = radius

    def area(self):
        return 3.14 * self.radius * self.radius

class Rectangle(Shape):
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def area(self):
        return self.length * self.width

circle_obj = Circle(5)
rectangle_obj = Rectangle(4, 6)

print(circle_obj.area())     
print(rectangle_obj.area())

----


+*Out[16]:*+
----
78.5
24
----


+*In[ ]:*+
[source, ipython3]
----

----
